;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name timothypratley.reanimated.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, events goog.events, goog.events goog.events, EventType goog.events.EventType, goog.events.EventType goog.events.EventType, dom goog.dom, goog.dom goog.dom}, :uses nil, :defs {interval {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 198, :column 7, :end-line 198, :end-column 15, :arglists (quote ([f t])), :doc "Call function f every period t while mounted in the DOM."}, :name timothypratley.reanimated.core/interval, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 15, :method-params ([f t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f t])), :doc "Call function f every period t while mounted in the DOM."}, timeout {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 213, :column 7, :end-line 213, :end-column 14, :arglists (quote ([f t])), :doc "Call function f after period t if still mounted in the DOM."}, :name timothypratley.reanimated.core/timeout, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 14, :method-params ([f t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f t])), :doc "Call function f after period t if still mounted in the DOM."}, stiffness {:name timothypratley.reanimated.core/stiffness, :file "out/timothypratley/reanimated/core.cljs", :line 132, :column 1, :end-line 132, :end-column 15, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 132, :column 6, :end-line 132, :end-column 15}}, mass {:name timothypratley.reanimated.core/mass, :file "out/timothypratley/reanimated/core.cljs", :line 131, :column 1, :end-line 131, :end-column 10, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 131, :column 6, :end-line 131, :end-column 10}}, pop-when {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 22, :column 7, :end-line 22, :end-column 15, :arglists (quote ([condition then] [condition then options])), :doc "Wraps a component to animate creation and destruction", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([condition then] [condition then options]), :arglists ([condition then] [condition then options]), :arglists-meta (nil nil)}}, :name timothypratley.reanimated.core/pop-when, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([condition then] [condition then options]), :arglists ([condition then] [condition then options]), :arglists-meta (nil nil)}, :method-params ([condition then] [condition then options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists ([condition then] [condition then options]), :doc "Wraps a component to animate creation and destruction"}, now {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 11, :column 7, :end-line 11, :end-column 10, :arglists (quote ([]))}, :name timothypratley.reanimated.core/now, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, evaluate {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 135, :column 7, :end-line 135, :end-column 15, :arglists (quote ([x2 dt x v a]))}, :name timothypratley.reanimated.core/evaluate, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 15, :method-params ([x2 dt x v a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 5, :fn-var true, :arglists (quote ([x2 dt x v a]))}, toggle-handler {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 47, :column 7, :end-line 47, :end-column 21, :arglists (quote ([r]))}, :name timothypratley.reanimated.core/toggle-handler, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 21, :method-params ([r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([r]))}, interpolate-to {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 78, :column 7, :end-line 78, :end-column 21, :arglists (quote ([x] [x options])), :doc "Interpolates toward new values.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x options]), :arglists ([x] [x options]), :arglists-meta (nil nil)}}, :name timothypratley.reanimated.core/interpolate-to, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x options]), :arglists ([x] [x options]), :arglists-meta (nil nil)}, :method-params ([x] [x options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x options]), :doc "Interpolates toward new values."}, interpolate {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 14, :column 7, :end-line 14, :end-column 18, :arglists (quote ([a b duration t])), :doc "Calculates a value between a and b relative to t in duration."}, :name timothypratley.reanimated.core/interpolate, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 18, :method-params ([a b duration t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a b duration t])), :doc "Calculates a value between a and b relative to t in duration."}, integrate-rk4 {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 143, :column 7, :end-line 143, :end-column 20, :arglists (quote ([x2 dt x v]))}, :name timothypratley.reanimated.core/integrate-rk4, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 20, :method-params ([x2 dt x v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x2 dt x v]))}, small {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 154, :column 7, :end-line 154, :end-column 12, :arglists (quote ([x]))}, :name timothypratley.reanimated.core/small, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, interpolate-if {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 55, :column 7, :end-line 55, :end-column 21, :arglists (quote ([condition a b] [condition a b options])), :doc "Interpolates between two values when the conditon changes.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([condition a b] [condition a b options]), :arglists ([condition a b] [condition a b options]), :arglists-meta (nil nil)}}, :name timothypratley.reanimated.core/interpolate-if, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([condition a b] [condition a b options]), :arglists ([condition a b] [condition a b options]), :arglists-meta (nil nil)}, :method-params ([condition a b] [condition a b options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 4, :fn-var true, :arglists ([condition a b] [condition a b options]), :doc "Interpolates between two values when the conditon changes."}, spring {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 157, :column 7, :end-line 157, :end-column 13, :arglists (quote ([x2] [x2 options])), :doc "Interpolates the argument of a component to x.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x2] [x2 options]), :arglists ([x2] [x2 options]), :arglists-meta (nil nil)}}, :name timothypratley.reanimated.core/spring, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x2] [x2 options]), :arglists ([x2] [x2 options]), :arglists-meta (nil nil)}, :method-params ([x2] [x2 options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists ([x2] [x2 options]), :doc "Interpolates the argument of a component to x."}, damping {:name timothypratley.reanimated.core/damping, :file "out/timothypratley/reanimated/core.cljs", :line 133, :column 1, :end-line 133, :end-column 13, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 133, :column 6, :end-line 133, :end-column 13}}, interpolate-arg {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 108, :column 7, :end-line 108, :end-column 22, :arglists (quote ([component x] [component x options])), :doc "Interpolates the argument of a component to x.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component x] [component x options]), :arglists ([component x] [component x options]), :arglists-meta (nil nil)}}, :name timothypratley.reanimated.core/interpolate-arg, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component x] [component x options]), :arglists ([component x] [component x options]), :arglists-meta (nil nil)}, :method-params ([component x] [component x options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 3, :fn-var true, :arglists ([component x] [component x options]), :doc "Interpolates the argument of a component to x."}, scroll {:name timothypratley.reanimated.core/scroll, :file "out/timothypratley/reanimated/core.cljs", :line 231, :column 1, :end-line 231, :end-column 12, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 231, :column 6, :end-line 231, :end-column 12}}, get-scroll {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 228, :column 7, :end-line 228, :end-column 17, :arglists (quote ([]))}, :name timothypratley.reanimated.core/get-scroll, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, watch {:protocol-inline nil, :meta {:file "/Users/phyrex/Dropbox/Programming/jiyi/out/timothypratley/reanimated/core.cljs", :line 183, :column 7, :end-line 183, :end-column 12, :arglists (quote ([r f])), :doc "Watch a ref only while mounted in the DOM."}, :name timothypratley.reanimated.core/watch, :variadic false, :file "out/timothypratley/reanimated/core.cljs", :end-column 12, :method-params ([r f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 2, :fn-var true, :arglists (quote ([r f])), :doc "Watch a ref only while mounted in the DOM."}}, :require-macros {ratom reagent.ratom, reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:seen #{:v :transform :frame :else :component-did-mount :start :easing :duration :style :div :reagent-render :from :opacity :condition :current :at :component-will-unmount :display-name :t :x :velocity :to}, :order [:else :from :start :frame :duration :easing :div :style :transform :opacity :condition :at :to :current :velocity :t :x :v :display-name :component-did-mount :component-will-unmount :reagent-render]}, :doc "An animation library for Reagent (ClojureScript)."}